<%- include('partials/header') %>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="page-title-box d-sm-flex align-items-center justify-content-between">
                <h4 class="mb-sm-0">Inventory Management</h4>
                <div class="page-title-right">
                    <ol class="breadcrumb m-0">
                        <li class="breadcrumb-item"><a href="/admin/dashboard">Dashboard</a></li>
                        <li class="breadcrumb-item active">Inventory</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <!-- Inventory Statistics -->
    <div class="row mb-4">
        <div class="col-xl-3 col-md-6">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex">
                        <div class="flex-1">
                            <p class="text-truncate font-size-14 mb-2">Total Products</p>
                            <h4 class="mb-2"><%= stats.totalProducts %></h4>
                        </div>
                        <div class="avatar-sm">
                            <span class="avatar-title bg-light text-primary rounded-3">
                                <i class="fas fa-box font-size-24"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex">
                        <div class="flex-1">
                            <p class="text-truncate font-size-14 mb-2">Total Stock</p>
                            <h4 class="mb-2"><%= stats.totalStock %></h4>
                        </div>
                        <div class="avatar-sm">
                            <span class="avatar-title bg-light text-success rounded-3">
                                <i class="fas fa-cubes font-size-24"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex">
                        <div class="flex-1">
                            <p class="text-truncate font-size-14 mb-2">Low Stock</p>
                            <h4 class="mb-2 text-warning"><%= stats.lowStock %></h4>
                        </div>
                        <div class="avatar-sm">
                            <span class="avatar-title bg-light text-warning rounded-3">
                                <i class="fas fa-exclamation-triangle font-size-24"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex">
                        <div class="flex-1">
                            <p class="text-truncate font-size-14 mb-2">Out of Stock</p>
                            <h4 class="mb-2 text-danger"><%= stats.outOfStock %></h4>
                        </div>
                        <div class="avatar-sm">
                            <span class="avatar-title bg-light text-danger rounded-3">
                                <i class="fas fa-times-circle font-size-24"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filters -->
    <div class="card mb-4">
        <div class="card-body">
            <form action="/admin/inventory" method="get" id="filterForm">
                <div class="row align-items-end">
                    <div class="col-md-3">
                        <label class="form-label">Search Products</label>
                        <input type="text" class="form-control" name="search" value="<%= search %>" 
                               placeholder="Product name...">
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Category</label>
                        <select class="form-select" name="category">
                            <option value="">All Categories</option>
                            <% categories.forEach(cat => { %>
                                <option value="<%= cat._id %>" <%= category === cat._id.toString() ? 'selected' : '' %>>
                                    <%= cat.name %>
                                </option>
                            <% }) %>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Stock Status</label>
                        <select class="form-select" name="stockStatus">
                            <option value="">All Stock</option>
                            <option value="inStock" <%= stockStatus === 'inStock' ? 'selected' : '' %>>In Stock</option>
                            <option value="lowStock" <%= stockStatus === 'lowStock' ? 'selected' : '' %>>Low Stock</option>
                            <option value="outOfStock" <%= stockStatus === 'outOfStock' ? 'selected' : '' %>>Out of Stock</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Sort By</label>
                        <select class="form-select" name="sortBy">
                            <option value="productName" <%= sortBy === 'productName' ? 'selected' : '' %>>Name</option>
                            <option value="quantity" <%= sortBy === 'quantity' ? 'selected' : '' %>>Stock</option>
                            <option value="salePrice" <%= sortBy === 'salePrice' ? 'selected' : '' %>>Price</option>
                            <option value="createdAt" <%= sortBy === 'createdAt' ? 'selected' : '' %>>Date Added</option>
                        </select>
                    </div>
                    <div class="col-md-1">
                        <label class="form-label">Order</label>
                        <select class="form-select" name="sortOrder">
                            <option value="asc" <%= sortOrder === 'asc' ? 'selected' : '' %>>Asc</option>
                            <option value="desc" <%= sortOrder === 'desc' ? 'selected' : '' %>>Desc</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <button type="submit" class="btn btn-primary me-2">
                            <i class="fas fa-search me-1"></i>Filter
                        </button>
                        <a href="/admin/inventory" class="btn btn-outline-secondary">
                            <i class="fas fa-times me-1"></i>Clear
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="card mb-4">
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <h6 class="mb-3">Quick Actions</h6>
                    <div class="btn-group me-2" role="group">
                        <button class="btn btn-warning" onclick="showLowStockAlert()">
                            <i class="fas fa-exclamation-triangle me-1"></i>Low Stock Alert
                        </button>
                        <button class="btn btn-info" onclick="bulkStockUpdate()">
                            <i class="fas fa-edit me-1"></i>Bulk Update
                        </button>
                        <a href="/admin/inventory/export" class="btn btn-success">
                            <i class="fas fa-download me-1"></i>Export Report
                        </a>
                    </div>
                </div>
                <div class="col-md-6 text-end">
                    <h6 class="mb-3">Inventory Value</h6>
                    <h4 class="text-primary">â‚¹<%= stats.totalValue.toLocaleString() %></h4>
                </div>
            </div>
        </div>
    </div>

    <!-- Inventory Table -->
    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="card-title mb-0">Product Inventory</h5>
            <span class="badge bg-primary">Total: <%= totalProducts %></span>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Product</th>
                            <th>Category</th>
                            <th>Current Stock</th>
                            <th>Price</th>
                            <th>Total Value</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (products && products.length > 0) { %>
                            <% products.forEach(product => { %>
                                <tr>
                                    <td class="inventory-table">
                                        <div class="product-info">
                                            <div class="flex-shrink-0">
                                                <img src="<%= product.productImage && product.productImage.length > 0 ? `/uploads/product-images/${product.productImage[0]}` : '/images/placeholder.jpg' %>"
                                                     alt="<%= product.productName %>"
                                                     class="admin-inventory-image"
                                                     onerror="this.src='/images/placeholder.jpg'; this.className='image-placeholder'">
                                            </div>
                                            <div class="flex-grow-1">
                                                <h6 class="mb-1 text-truncate fw-semibold"><%= product.productName %></h6>
                                                <small class="text-muted">SKU: #<%= product._id.toString().slice(-6) %></small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="badge bg-light text-dark"><%= product.category?.name || 'N/A' %></span>
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <span class="me-2 fw-bold 
                                                <%= product.quantity <= 0 ? 'text-danger' : 
                                                    product.quantity <= 10 ? 'text-warning' : 'text-success' %>">
                                                <%= product.quantity %>
                                            </span>
                                            <button class="btn btn-sm btn-outline-primary" 
                                                    onclick="updateStock('<%= product._id %>', '<%= product.productName %>', <%= product.quantity %>)">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                        </div>
                                    </td>
                                    <td>
                                        <div>
                                            <% if (product.hasOffer && product.finalPrice < product.regularPrice) { %>
                                                <span class="fw-semibold text-success">â‚¹<%= product.finalPrice.toLocaleString() %></span>
                                                <br><small class="text-muted text-decoration-line-through">â‚¹<%= product.regularPrice.toLocaleString() %></small>
                                                <% if (product.offerInfo) { %>
                                                    <br><small class="text-info"><i class="fas fa-tag"></i> <%= product.offerInfo.name %></small>
                                                <% } %>
                                            <% } else { %>
                                                <span class="fw-semibold">â‚¹<%= product.regularPrice.toLocaleString() %></span>
                                            <% } %>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="fw-semibold">â‚¹<%= (product.totalValueWithOffers || product.quantity * product.regularPrice).toLocaleString() %></span>
                                        <% if (product.hasOffer && product.totalValueWithOffers < (product.quantity * product.regularPrice)) { %>
                                            <br><small class="text-muted text-decoration-line-through">â‚¹<%= (product.quantity * product.regularPrice).toLocaleString() %></small>
                                        <% } %>
                                    </td>
                                    <td>
                                        <% if (product.quantity <= 0) { %>
                                            <span class="badge bg-danger">Out of Stock</span>
                                        <% } else if (product.quantity <= 10) { %>
                                            <span class="badge bg-warning">Low Stock</span>
                                        <% } else { %>
                                            <span class="badge bg-success">In Stock</span>
                                        <% } %>
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <button class="btn btn-sm btn-outline-success" 
                                                    onclick="quickStockUpdate('<%= product._id %>', 'add')"
                                                    title="Add Stock">
                                                <i class="fas fa-plus"></i>
                                            </button>
                                            <button class="btn btn-sm btn-outline-warning" 
                                                    onclick="quickStockUpdate('<%= product._id %>', 'subtract')"
                                                    title="Reduce Stock">
                                                <i class="fas fa-minus"></i>
                                            </button>
                                            <a href="/admin/edit-product/<%= product._id %>" class="btn btn-sm btn-outline-primary" title="Edit Product">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            <% }) %>
                        <% } else { %>
                            <tr>
                                <td colspan="7" class="text-center py-4">
                                    <div class="text-muted">
                                        <i class="fas fa-box fa-3x mb-3"></i>
                                        <p>No products found</p>
                                    </div>
                                </td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <% if (totalPages > 1) { %>
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center">
                        <% if (currentPage > 1) { %>
                            <li class="page-item">
                                <a class="page-link" href="?page=<%= currentPage - 1 %>&search=<%= search %>&category=<%= category %>&stockStatus=<%= stockStatus %>&sortBy=<%= sortBy %>&sortOrder=<%= sortOrder %>">Previous</a>
                            </li>
                        <% } %>
                        
                        <% for (let i = Math.max(1, currentPage - 2); i <= Math.min(totalPages, currentPage + 2); i++) { %>
                            <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                                <a class="page-link" href="?page=<%= i %>&search=<%= search %>&category=<%= category %>&stockStatus=<%= stockStatus %>&sortBy=<%= sortBy %>&sortOrder=<%= sortOrder %>"><%= i %></a>
                            </li>
                        <% } %>
                        
                        <% if (currentPage < totalPages) { %>
                            <li class="page-item">
                                <a class="page-link" href="?page=<%= currentPage + 1 %>&search=<%= search %>&category=<%= category %>&stockStatus=<%= stockStatus %>&sortBy=<%= sortBy %>&sortOrder=<%= sortOrder %>">Next</a>
                            </li>
                        <% } %>
                    </ul>
                </nav>
            <% } %>
        </div>
    </div>
</div>

<!-- SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
// Update stock function
function updateStock(productId, productName, currentStock) {
    Swal.fire({
        title: `Update Stock for ${productName}`,
        html: `
            <div class="mb-3">
                <label class="form-label">Current Stock: <strong>${currentStock}</strong></label>
            </div>
            <div class="mb-3">
                <label class="form-label">Action:</label>
                <select id="stockAction" class="form-select">
                    <option value="set">Set to specific amount</option>
                    <option value="add">Add to current stock</option>
                    <option value="subtract">Subtract from current stock</option>
                </select>
            </div>
            <div class="mb-3">
                <label class="form-label">Quantity:</label>
                <input type="number" id="stockQuantity" class="form-control" min="0" value="0">
            </div>
        `,
        showCancelButton: true,
        confirmButtonText: 'Update Stock',
        preConfirm: () => {
            const action = document.getElementById('stockAction').value;
            const quantity = document.getElementById('stockQuantity').value;
            
            if (!quantity || quantity < 0) {
                Swal.showValidationMessage('Please enter a valid quantity');
                return false;
            }
            
            return { action, quantity };
        }
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/admin/inventory/${productId}/stock`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(result.value)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire('Success!', data.message, 'success').then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire('Error!', data.message, 'error');
                }
            })
            .catch(error => {
                Swal.fire('Error!', 'Failed to update stock', 'error');
            });
        }
    });
}

// Quick stock update
function quickStockUpdate(productId, action) {
    const quantity = action === 'add' ? 10 : 5; // Default quantities
    const actionText = action === 'add' ? 'Add 10' : 'Subtract 5';
    
    Swal.fire({
        title: `${actionText} from stock?`,
        icon: 'question',
        showCancelButton: true,
        confirmButtonText: `Yes, ${actionText.toLowerCase()}!`
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/admin/inventory/${productId}/stock`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ action, quantity })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire('Success!', data.message, 'success').then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire('Error!', data.message, 'error');
                }
            })
            .catch(error => {
                Swal.fire('Error!', 'Failed to update stock', 'error');
            });
        }
    });
}

// Show low stock alert
function showLowStockAlert() {
    fetch('/admin/inventory/low-stock')
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            if (data.products.length === 0) {
                Swal.fire('Great!', 'No products are running low on stock.', 'success');
            } else {
                let html = '<div class="table-responsive"><table class="table table-sm"><thead><tr><th>Product</th><th>Stock</th></tr></thead><tbody>';
                data.products.forEach(product => {
                    html += `<tr><td>${product.productName}</td><td class="text-warning">${product.quantity}</td></tr>`;
                });
                html += '</tbody></table></div>';
                
                Swal.fire({
                    title: `${data.count} Products Running Low`,
                    html: html,
                    width: '600px'
                });
            }
        }
    })
    .catch(error => {
        Swal.fire('Error!', 'Failed to fetch low stock products', 'error');
    });
}

// Bulk stock update
function bulkStockUpdate() {
    // Get all visible products
    const productRows = document.querySelectorAll('tbody tr');

    if (productRows.length === 0) {
        Swal.fire('No Products', 'No products available for bulk update.', 'info');
        return;
    }

    // Create bulk update form HTML
    let formHTML = `
        <div class="bulk-update-container">
            <div class="mb-3">
                <label class="form-label fw-bold">Select Action:</label>
                <select id="bulkAction" class="form-select">
                    <option value="set">Set Stock To</option>
                    <option value="add">Add Stock</option>
                    <option value="subtract">Subtract Stock</option>
                </select>
            </div>
            <div class="mb-3">
                <label class="form-label fw-bold">Quantity:</label>
                <input type="number" id="bulkQuantity" class="form-control" min="0" placeholder="Enter quantity">
            </div>
            <div class="mb-3">
                <label class="form-label fw-bold">Select Products:</label>
                <div class="form-check mb-2">
                    <input class="form-check-input" type="checkbox" id="selectAll">
                    <label class="form-check-label fw-bold" for="selectAll">
                        Select All Products
                    </label>
                </div>
                <div class="product-list" style="max-height: 300px; overflow-y: auto; border: 1px solid #ddd; padding: 10px; border-radius: 5px;">
    `;

    // Add each product as a checkbox
    productRows.forEach((row, index) => {
        const productName = row.querySelector('td:nth-child(1').textContent.trim();
        const currentStock = row.querySelector('td:nth-child(3)').textContent.trim();
        const productId = row.querySelector('.btn-outline-primary').getAttribute('onclick').match(/'([^']+)'/)[1];

        formHTML += `
            <div class="form-check mb-1">
                <input class="form-check-input product-checkbox" type="checkbox" value="${productId}" id="product_${index}">
                <label class="form-check-label" for="product_${index}">
                    <strong>${productName}</strong> (Current: ${currentStock})
                </label>
            </div>
        `;
    });

    formHTML += `
                </div>
            </div>
        </div>
    `;

    Swal.fire({
        title: 'Bulk Stock Update',
        html: formHTML,
        width: '600px',
        showCancelButton: true,
        confirmButtonText: 'Update Stock',
        cancelButtonText: 'Cancel',
        confirmButtonColor: '#28a745',
        cancelButtonColor: '#6c757d',
        didOpen: () => {
            // Handle select all functionality
            const selectAllCheckbox = document.getElementById('selectAll');
            const productCheckboxes = document.querySelectorAll('.product-checkbox');

            selectAllCheckbox.addEventListener('change', function() {
                productCheckboxes.forEach(checkbox => {
                    checkbox.checked = this.checked;
                });
            });

            // Update select all when individual checkboxes change
            productCheckboxes.forEach(checkbox => {
                checkbox.addEventListener('change', function() {
                    const allChecked = Array.from(productCheckboxes).every(cb => cb.checked);
                    const someChecked = Array.from(productCheckboxes).some(cb => cb.checked);
                    selectAllCheckbox.checked = allChecked;
                    selectAllCheckbox.indeterminate = someChecked && !allChecked;
                });
            });
        },
        preConfirm: () => {
            const action = document.getElementById('bulkAction').value;
            const quantity = document.getElementById('bulkQuantity').value;
            const selectedProducts = Array.from(document.querySelectorAll('.product-checkbox:checked')).map(cb => cb.value);

            if (!quantity || quantity < 0) {
                Swal.showValidationMessage('Please enter a valid quantity');
                return false;
            }

            if (selectedProducts.length === 0) {
                Swal.showValidationMessage('Please select at least one product');
                return false;
            }

            return { action, quantity: parseInt(quantity), selectedProducts };
        }
    }).then((result) => {
        if (result.isConfirmed) {
            performBulkUpdate(result.value);
        }
    });
}

// Perform the actual bulk update
function performBulkUpdate(data) {
    const { action, quantity, selectedProducts } = data;

    // Prepare updates array
    const updates = selectedProducts.map(productId => ({
        productId: productId,
        quantity: quantity,
        action: action
    }));

    // Show loading
    Swal.fire({
        title: 'Updating Stock...',
        text: 'Please wait while we update the stock levels.',
        allowOutsideClick: false,
        allowEscapeKey: false,
        showConfirmButton: false,
        didOpen: () => {
            Swal.showLoading();
        }
    });

    // Send bulk update request
    fetch('/admin/inventory/bulk-update', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ updates: updates })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            Swal.fire({
                title: 'Success!',
                text: data.message,
                icon: 'success',
                confirmButtonColor: '#28a745'
            }).then(() => {
                // Reload the page to show updated stock levels
                window.location.reload();
            });
        } else {
            Swal.fire('Error!', data.message || 'Failed to update stock', 'error');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        Swal.fire('Error!', 'Failed to update stock. Please try again.', 'error');
    });
}
</script>

<style>
/* Admin Inventory Image Display */
.admin-inventory-image {
    width: 60px;
    height: 60px;
    object-fit: cover;
    border: 1px solid #dee2e6;
    border-radius: 8px;
    transition: all 0.3s ease;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.admin-inventory-image:hover {
    transform: scale(1.05);
    box-shadow: 0 4px 12px rgba(0,0,0,0.2);
    border-color: #007bff;
}

/* Inventory table improvements */
.inventory-table td {
    vertical-align: middle;
}

.inventory-table .product-info {
    display: flex;
    align-items: center;
    gap: 12px;
}

/* Loading state for images */
.image-placeholder {
    width: 60px;
    height: 60px;
    background: #f8f9fa;
    border: 1px solid #dee2e6;
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #6c757d;
    font-size: 12px;
}

/* Bulk Update Styling */
.bulk-update-container {
    text-align: left;
}

.bulk-update-container .form-label {
    color: #495057;
    margin-bottom: 8px;
}

.bulk-update-container .form-select,
.bulk-update-container .form-control {
    border: 1px solid #ced4da;
    border-radius: 6px;
    padding: 8px 12px;
    font-size: 14px;
}

.bulk-update-container .form-select:focus,
.bulk-update-container .form-control:focus {
    border-color: #007bff;
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}

.bulk-update-container .product-list {
    background: #f8f9fa;
}

.bulk-update-container .form-check {
    padding: 8px 12px;
    margin: 0;
    border-radius: 4px;
    transition: background-color 0.2s ease;
}

.bulk-update-container .form-check:hover {
    background-color: #e9ecef;
}

.bulk-update-container .form-check-input:checked + .form-check-label {
    color: #007bff;
    font-weight: 500;
}

.bulk-update-container .form-check-label {
    cursor: pointer;
    user-select: none;
    width: 100%;
    margin-bottom: 0;
}

/* SweetAlert2 custom styling for bulk update */
.swal2-popup.swal2-modal {
    border-radius: 10px;
}

.swal2-title {
    color: #495057;
    font-weight: 600;
}

.swal2-confirm {
    border-radius: 6px !important;
    padding: 10px 20px !important;
    font-weight: 500 !important;
}

.swal2-cancel {
    border-radius: 6px !important;
    padding: 10px 20px !important;
    font-weight: 500 !important;
}
</style>

<%- include('partials/footer') %>
