<%- include('partials/header') %>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="page-title-box">
                <div class="page-title-right">
                    <ol class="breadcrumb m-0">
                        <li class="breadcrumb-item">
                            <a href="/admin/dashboard" class="text-decoration-none">Dashboard</a>
                        </li>
                        <li class="breadcrumb-item">
                            <a href="javascript:void(0)" onclick="window.location.href='/admin/orders'" class="text-decoration-none">
                                Orders
                            </a>
                        </li>
                        <li class="breadcrumb-item active">Order Details</li>
                    </ol>
                </div>
                <h4 class="page-title">Order Details</h4>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Order Information -->
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Order #<%= order.orderId %></h5>
                </div>
                <div class="card-body">
                    <div class="row mb-4">
                        <div class="col-sm-6">
                            <div class="text-muted">
                                <h5 class="font-size-16 mb-3">Order Date:</h5>
                                <p class="mb-2"><%= new Date(order.createdOn).toLocaleDateString() %></p>
                                <p class="mb-0"><%= new Date(order.createdOn).toLocaleTimeString() %></p>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="text-muted">
                                <h5 class="font-size-16 mb-3">Order Status:</h5>
                                <div class="mb-3">
                                    <% 
                                    let statusClass = 'bg-secondary';
                                    if (order.status === 'Processing') statusClass = 'bg-warning';
                                    else if (order.status === 'Shipped') statusClass = 'bg-info';
                                    else if (order.status === 'Out for Delivery') statusClass = 'bg-primary';
                                    else if (order.status === 'Delivered') statusClass = 'bg-success';
                                    else if (order.status === 'Cancelled') statusClass = 'bg-danger';
                                    %>
                                    <span class="badge <%= statusClass %> font-size-12"><%= order.status %></span>
                                </div>
                                <% if (order.status !== 'Delivered' && order.status !== 'Cancelled') { %>
                                    <select class="form-select" id="orderStatusSelect" onchange="updateOrderStatus()">
                                        <option value="">Change Status</option>
                                        <%
                                        // Define available status options based on current status
                                        let availableStatuses = [];
                                        if (order.status === 'Pending') {
                                            availableStatuses = ['Processing', 'Shipped', 'Out for Delivery', 'Delivered', 'Cancelled'];
                                        } else if (order.status === 'Processing') {
                                            availableStatuses = ['Shipped', 'Out for Delivery', 'Delivered', 'Cancelled'];
                                        } else if (order.status === 'Shipped') {
                                            availableStatuses = ['Out for Delivery', 'Delivered', 'Cancelled'];
                                        } else if (order.status === 'Out for Delivery') {
                                            availableStatuses = ['Delivered', 'Cancelled'];
                                        }
                                        %>
                                        <% availableStatuses.forEach(status => { %>
                                            <option value="<%= status %>"><%= status %></option>
                                        <% }) %>
                                    </select>
                                <% } else { %>
                                    <span class="text-muted">Status cannot be changed</span>
                                <% } %>
                            </div>
                        </div>
                    </div>

                    <!-- Order Items -->
                    <div class="table-responsive">
                        <table class="table table-nowrap">
                            <thead>
                                <tr>
                                    <th scope="col">Product</th>
                                    <th scope="col">Price</th>
                                    <th scope="col">Quantity</th>
                                    <th scope="col">Total</th>
                                    <th scope="col">Status</th>
                                    <th scope="col">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% order.orderedItems.forEach((item, index) => { %>
                                    <tr>
                                        <td>
                                            <div class="d-flex">
                                                <div class="flex-shrink-0 me-3">
                                                    <img src="<%= item.product?.productImage && item.product.productImage.length > 0 ? `/uploads/product-images/${item.product.productImage[0]}` : '/images/placeholder.jpg' %>"
                                                         alt="<%= item.product?.productName || 'Product' %>"
                                                         class="admin-order-detail-image"
                                                         onerror="this.src='/images/placeholder.jpg'">
                                                </div>
                                                <div class="flex-grow-1 order-product-details">
                                                    <h5 class="font-size-14 text-truncate mb-1">
                                                        <a href="#" class="text-dark text-decoration-none"><%= item.product?.productName || 'Product Not Found' %></a>
                                                    </h5>
                                                    <p class="text-muted mb-0">SKU: #<%= item.product?._id.toString().slice(-6) || 'N/A' %></p>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <% if (item.hasOffer && item.finalPrice < item.originalPrice) { %>
                                                <span class="text-success">₹<%= item.finalPrice.toLocaleString() %></span>
                                                <br><small class="text-muted text-decoration-line-through">₹<%= item.originalPrice.toLocaleString() %></small>
                                                <% if (item.offerInfo) { %>
                                                    <br><small class="text-info"><i class="fas fa-tag"></i> <%= item.offerInfo.name %></small>
                                                <% } %>
                                            <% } else { %>
                                                ₹<%= item.price.toLocaleString() %>
                                            <% } %>
                                        </td>
                                        <td><%= item.quantity %></td>
                                        <td>
                                            <% if (item.hasOffer && item.finalPrice) { %>
                                                ₹<%= (item.finalPrice * item.quantity).toLocaleString() %>
                                            <% } else { %>
                                                ₹<%= (item.price * item.quantity).toLocaleString() %>
                                            <% } %>
                                        </td>
                                        <td>
                                            <% 
                                            let itemStatusClass = 'bg-secondary';
                                            if (item.status === 'Processing') itemStatusClass = 'bg-warning';
                                            else if (item.status === 'Shipped') itemStatusClass = 'bg-info';
                                            else if (item.status === 'Out for Delivery') itemStatusClass = 'bg-primary';
                                            else if (item.status === 'Delivered') itemStatusClass = 'bg-success';
                                            else if (item.status === 'Cancelled') itemStatusClass = 'bg-danger';
                                            else if (item.status === 'Return Request') itemStatusClass = 'bg-warning';
                                            else if (item.status === 'Returned') itemStatusClass = 'bg-purple';
                                            %>
                                            <span class="badge <%= itemStatusClass %> font-size-11"><%= item.status %></span>
                                        </td>
                                        <td>
                                            <% if (item.status === 'Return Request') { %>
                                                <div class="btn-group" role="group">
                                                    <button class="btn btn-sm btn-success" onclick="handleReturnRequest('<%= order._id %>', <%= index %>, 'approve')">
                                                        <i class="fas fa-check me-1"></i>Approve
                                                    </button>
                                                    <button class="btn btn-sm btn-danger" onclick="handleReturnRequest('<%= order._id %>', <%= index %>, 'reject')">
                                                        <i class="fas fa-times me-1"></i>Reject
                                                    </button>
                                                </div>
                                            <% } else if (item.status !== 'Delivered' && item.status !== 'Cancelled' && item.status !== 'Returned') { %>
                                                <select class="form-select form-select-sm" onchange="updateItemStatus('<%= order._id %>', <%= index %>, this.value)">
                                                    <option value="">Change Status</option>
                                                    <%
                                                    // Define available status options based on current item status
                                                    let itemAvailableStatuses = [];
                                                    if (item.status === 'Pending') {
                                                        itemAvailableStatuses = ['Processing', 'Shipped', 'Out for Delivery', 'Delivered', 'Cancelled'];
                                                    } else if (item.status === 'Processing') {
                                                        itemAvailableStatuses = ['Shipped', 'Out for Delivery', 'Delivered', 'Cancelled'];
                                                    } else if (item.status === 'Shipped') {
                                                        itemAvailableStatuses = ['Out for Delivery', 'Delivered', 'Cancelled'];
                                                    } else if (item.status === 'Out for Delivery') {
                                                        itemAvailableStatuses = ['Delivered', 'Cancelled'];
                                                    }
                                                    %>
                                                    <% itemAvailableStatuses.forEach(status => { %>
                                                        <option value="<%= status %>"><%= status %></option>
                                                    <% }) %>
                                                </select>
                                            <% } else { %>
                                                <span class="text-muted">Status cannot be changed</span>
                                            <% } %>
                                            
                                            <% if (item.returnReason) { %>
                                                <div class="mt-2">
                                                    <small class="text-muted">Return Reason:</small>
                                                    <p class="small mb-0"><%= item.returnReason %></p>
                                                </div>
                                            <% } %>
                                            
                                            <% if (item.adminResponse) { %>
                                                <div class="mt-2">
                                                    <small class="text-muted">Admin Response:</small>
                                                    <p class="small mb-0"><%= item.adminResponse %></p>
                                                </div>
                                            <% } %>
                                        </td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Customer & Payment Info -->
        <div class="col-lg-4">
            <!-- Customer Information -->
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Customer Information</h5>
                </div>
                <div class="card-body">
                    <div class="text-center">
                        <% if (order.userId?.profileImage) { %>
                            <div class="avatar-lg mx-auto mb-3">
                                <img src="/uploads/profiles/<%= order.userId.profileImage %>"
                                     alt="<%= order.userId.name %>"
                                     class="admin-customer-profile-image"
                                     onerror="this.src='/images/placeholder.jpg'">
                            </div>
                        <% } %>
                        <h5 class="font-size-16 mb-1"><%= order.userId?.name || 'Unknown Customer' %></h5>
                        <p class="text-muted mb-2"><%= order.userId?.email || 'N/A' %></p>
                        <p class="text-muted mb-0"><%= order.userId?.phone || 'N/A' %></p>
                    </div>
                </div>
            </div>

            <!-- Order Summary -->
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Order Summary</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-borderless mb-0">
                            <tbody>
                                <tr>
                                    <td>Sub Total :</td>
                                    <td class="text-end">₹<%= order.subtotal.toLocaleString() %></td>
                                </tr>

                                <% if (order.shippingCharge > 0) { %>
                                    <tr>
                                        <td>Shipping Charge :</td>
                                        <td class="text-end">₹<%= order.shippingCharge.toLocaleString() %></td>
                                    </tr>
                                <% } %>
                                <% if (order.discount > 0) { %>
                                    <tr>
                                        <td>Coupon Discount :</td>
                                        <td class="text-end text-success">-₹<%= order.discount.toLocaleString() %></td>
                                    </tr>
                                <% } %>
                                <tr class="border-top">
                                    <th>Total :</th>
                                    <th class="text-end">₹<%= order.finalTotal.toLocaleString() %></th>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Payment Information -->
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Payment Information</h5>
                </div>
                <div class="card-body">
                    <div class="d-flex align-items-center mb-2">
                        <div class="flex-shrink-0">
                            <i class="fas fa-credit-card text-primary"></i>
                        </div>
                        <div class="flex-grow-1 ms-3">
                            <h6 class="mb-0">Payment Method</h6>
                            <p class="text-muted mb-0"><%= order.paymentMethod || 'Cash on Delivery' %></p>
                        </div>
                    </div>
                    <div class="d-flex align-items-center">
                        <div class="flex-shrink-0">
                            <i class="fas fa-check-circle text-success"></i>
                        </div>
                        <div class="flex-grow-1 ms-3">
                            <h6 class="mb-0">Payment Status</h6>
                            <p class="text-muted mb-0"><%= order.paymentStatus || 'Pending' %></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
// Simple navigation functions
function navigateToAdminOrders() {
    window.location.href = '/admin/orders';
}

function navigateToAdminDashboard() {
    window.location.href = '/admin/dashboard';
}

// Update order status with enhanced error handling
function updateOrderStatus() {
    try {
        const statusSelect = document.getElementById('orderStatusSelect');
        if (!statusSelect) {
            console.error('Order status select element not found');
            return;
        }

        const status = statusSelect.value;
        if (!status) {
            console.log('No status selected');
            return;
        }

        console.log('🔄 Updating order status to:', status);

        Swal.fire({
            title: `Change order status to ${status}?`,
            text: 'This will update the status of the entire order.',
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, update!',
            allowOutsideClick: false,
            allowEscapeKey: false
        }).then((result) => {
            if (result.isConfirmed) {
                // Show loading
                Swal.fire({
                    title: 'Updating...',
                    text: 'Please wait while we update the order status.',
                    icon: 'info',
                    allowOutsideClick: false,
                    allowEscapeKey: false,
                    showConfirmButton: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });

                fetch(`/admin/orders/<%= order._id %>/status`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ status: status })
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            title: 'Success!',
                            text: data.message,
                            icon: 'success',
                            timer: 2000,
                            showConfirmButton: false
                        }).then(() => {
                            window.location.reload();
                        });
                    } else {
                        Swal.fire('Error!', data.message || 'Failed to update order status', 'error');
                    }
                })
                .catch(error => {
                    console.error('Order status update error:', error);
                    Swal.fire('Error!', 'Failed to update order status. Please try again.', 'error');
                });
            }
        });
    } catch (error) {
        console.error('updateOrderStatus function error:', error);
        Swal.fire('Error!', 'An unexpected error occurred. Please refresh the page and try again.', 'error');
    }
}

// Update item status
function updateItemStatus(orderId, itemIndex, status) {
    if (!status) return;

    fetch(`/admin/orders/${orderId}/items/${itemIndex}/status`, {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ status: status })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            Swal.fire('Success!', data.message, 'success').then(() => {
                location.reload();
            });
        } else {
            Swal.fire('Error!', data.message, 'error');
        }
    })
    .catch(error => {
        Swal.fire('Error!', 'Failed to update item status', 'error');
    });
}

// Handle return request
function handleReturnRequest(orderId, itemIndex, action) {
    const title = action === 'approve' ? 'Approve Return Request?' : 'Reject Return Request?';
    const text = action === 'approve' ?
        'This will approve the return and refund the amount to customer wallet.' :
        'This will reject the return request and mark the item as delivered.';

    Swal.fire({
        title: title,
        text: text,
        input: 'textarea',
        inputLabel: 'Admin Response (Optional)',
        inputPlaceholder: 'Enter your response...',
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: action === 'approve' ? '#28a745' : '#dc3545',
        cancelButtonColor: '#6c757d',
        confirmButtonText: action === 'approve' ? 'Approve Return' : 'Reject Return'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/admin/orders/${orderId}/items/${itemIndex}/return`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    action: action,
                    adminResponse: result.value || ''
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire('Success!', data.message, 'success').then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire('Error!', data.message, 'error');
                }
            })
            .catch(error => {
                Swal.fire('Error!', 'Failed to process return request', 'error');
            });
        }
    });
}

// Clean and simple navigation
document.addEventListener('DOMContentLoaded', function() {
    // Simple navigation without complex event handling
    window.goToAdminOrders = function() {
        window.location.href = '/admin/orders';
    };

    window.goToAdminDashboard = function() {
        window.location.href = '/admin/dashboard';
    };
});
</script>

<style>
/* COMPLETE GLITCH PREVENTION - Remove all animations and transforms */
* {
    animation: none !important;
    transition: none !important;
    transform: none !important;
}

/* Allow only safe transitions for colors and opacity */
.breadcrumb-item a,
.btn,
.form-select {
    transition: color 0.1s ease, background-color 0.1s ease, border-color 0.1s ease !important;
}

/* Anti-Glitch CSS - Prevent page issues and improve stability */
.container-fluid {
    position: relative;
    overflow-x: hidden; /* Prevent horizontal scroll glitches */
}

.container-fluid * {
    backface-visibility: hidden; /* Prevent rendering issues */
    -webkit-backface-visibility: hidden;
    transform-style: preserve-3d; /* Improve rendering performance */
    -webkit-font-smoothing: antialiased; /* Improve text rendering */
    -moz-osx-font-smoothing: grayscale;
}

/* Disable problematic animations on order detail page */
.container-fluid .btn:hover,
.container-fluid .table tbody tr:hover,
.container-fluid .stat-card:hover {
    transform: none !important; /* Prevent button/row hover animations */
}

/* Fix potential layout glitches */
.container-fluid .row {
    margin-left: 0;
    margin-right: 0;
}

.container-fluid .col-lg-8,
.container-fluid .col-lg-4 {
    padding-left: 15px;
    padding-right: 15px;
}

/* Admin Order Detail Page - Image Display Improvements (No Vibrating) */
.admin-order-detail-image {
    width: 70px;
    height: 70px;
    object-fit: cover;
    border: 2px solid #dee2e6;
    border-radius: 8px;
    transition: border-color 0.2s ease, box-shadow 0.2s ease; /* Only animate border and shadow */
    box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    transform: none !important; /* Prevent any transform animations */
}

.admin-order-detail-image:hover {
    border-color: #007bff;
    box-shadow: 0 4px 12px rgba(0,123,255,0.2);
    /* Removed transform to prevent vibrating */
}

/* Customer profile image in order details */
.admin-customer-profile-image {
    width: 80px;
    height: 80px;
    object-fit: cover;
    border-radius: 50%;
    border: 3px solid #e9ecef;
    transition: border-color 0.2s ease, box-shadow 0.2s ease; /* Only animate border and shadow */
    box-shadow: 0 3px 8px rgba(0,0,0,0.15);
    transform: none !important; /* Prevent any transform animations */
}

.admin-customer-profile-image:hover {
    border-color: #007bff;
    box-shadow: 0 5px 15px rgba(0,123,255,0.3);
    /* Removed transform to prevent vibrating */
}

/* Order detail table improvements */
.table td {
    vertical-align: middle;
    padding: 1rem 0.75rem;
}

.table th {
    background-color: #f8f9fa;
    border-bottom: 2px solid #dee2e6;
    font-weight: 600;
    color: #495057;
}

/* Product info layout in order details */
.order-product-info {
    display: flex;
    align-items: center;
    gap: 15px;
}

.order-product-details h5 {
    margin-bottom: 4px;
    font-weight: 600;
    color: #212529;
}

.order-product-details p {
    margin-bottom: 0;
    font-size: 0.875rem;
    color: #6c757d;
}

/* Status badges improvements */
.badge {
    font-size: 0.75rem;
    padding: 0.375rem 0.75rem;
    font-weight: 500;
}

/* Action buttons styling */
.btn-group .btn {
    font-size: 0.8rem;
    padding: 0.375rem 0.75rem;
}

/* Card styling improvements - Override admin header animations */
.container-fluid .card {
    border: 1px solid #e3e6f0;
    box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
    border-radius: 0.5rem;
    transition: none !important; /* Remove vibrating animations */
    transform: none !important; /* Prevent transform animations */
}

.container-fluid .card:hover {
    transform: none !important; /* Prevent hover animations */
    box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15) !important; /* Keep static shadow */
}

.container-fluid .card-header {
    background-color: #f8f9fc;
    border-bottom: 1px solid #e3e6f0;
    border-radius: 0.5rem 0.5rem 0 0 !important; /* Override admin header radius */
}

/* Responsive improvements */
@media (max-width: 768px) {
    .admin-order-detail-image {
        width: 60px;
        height: 60px;
    }

    .admin-customer-profile-image {
        width: 70px;
        height: 70px;
    }

    .table-responsive {
        font-size: 0.875rem;
    }
}
</style>

<%- include('partials/footer') %>
